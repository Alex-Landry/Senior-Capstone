version: '3.5'


services:
  app:
    build:
      context: .
    command: gunicorn inhouse.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
    ports:
      - "8000:8000"
    restart: always
    env_file:
      - .env
    networks:
      - djangonetwork
      - nginxnetwork
    depends_on:
      - app-db
    links:
      - app-db:app-db

  app-db:
    image: postgres:12-alpine
    container_name: app-db
    ports:
      - "5432:5432"
    networks:
      - djangonetwork
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data:rw
    env_file:
      - .env
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust

  proxy:
    build: ./proxy
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
    restart: always
    ports:
      - "1337:80"
    depends_on:
      - app
    networks:
      - nginxnetwork

volumes:
  static_volume:
  media_volume:
  postgres_data:

networks:
  djangonetwork:
    driver: bridge
  nginxnetwork:
    driver: bridge

  